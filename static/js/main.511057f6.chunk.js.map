{"version":3,"sources":["App.jsx","index.js"],"names":["goodsFromServer","App","state","goods","isGoodsVisible","isShowBtnVisible","showGoods","setState","prevState","reverseGoods","reverse","sortAlphabetically","sort","good1","good2","localeCompare","sortByLength","length","resetGoods","this","className","type","onClick","map","good","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,MAAM,GAAD,OAAMH,GACXI,gBAAgB,EAChBC,kBAAkB,GAJtB,EAOEC,UAAY,WACV,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,gBAAiBI,EAAUJ,eAC3BC,kBAAmBG,EAAUH,sBAVnC,EAcEI,aAAe,WACb,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOO,eAhBlC,EAoBEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAClBS,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,WAvBpD,EA2BEE,aAAe,WACb,EAAKT,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAClBS,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,eA9BrD,EAkCEC,WAAa,WACX,EAAKX,SAAS,CACZJ,MAAM,GAAD,OAAMH,MApCjB,4CAwCE,WAAU,IAAD,EAC6CmB,KAAKjB,MAAjDC,EADD,EACCA,MAAOC,EADR,EACQA,eAAgBC,EADxB,EACwBA,iBAE/B,OACE,yBAAKe,UAAU,OACZf,EAEG,4BACEgB,KAAK,SACLC,QAASH,KAAKb,WAFhB,cAOA,GAEHF,EAEG,oCACE,qCAGA,8CAEG,IACAD,EAAMc,QAET,4BACEI,KAAK,SACLC,QAASH,KAAKV,cAFhB,iBAOA,4BACEY,KAAK,SACLC,QAASH,KAAKR,oBAFhB,uBAOA,4BACEU,KAAK,SACLC,QAASH,KAAKH,cAFhB,kBAOA,4BACEK,KAAK,SACLC,QAASH,KAAKD,YAFhB,eAOA,4BACGf,EAAMoB,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GAAOA,QAKtB,QAtGZ,GAAyBE,IAAMC,WCZ/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.511057f6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    goods: [...goodsFromServer],\n    isGoodsVisible: false,\n    isShowBtnVisible: true,\n  }\n\n  showGoods = () => {\n    this.setState(prevState => ({\n      isGoodsVisible: !prevState.isGoodsVisible,\n      isShowBtnVisible: !prevState.isShowBtnVisible,\n    }));\n  }\n\n  reverseGoods = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods]\n        .sort((good1, good2) => good1.localeCompare(good2)),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods]\n        .sort((good1, good2) => good1.length - good2.length),\n    }));\n  }\n\n  resetGoods = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n    });\n  }\n\n  render() {\n    const { goods, isGoodsVisible, isShowBtnVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isShowBtnVisible\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.showGoods}\n            >\n              Show goods\n            </button>\n          )\n          : ''}\n\n        {isGoodsVisible\n          ? (\n            <>\n              <h1>\n                Goods\n              </h1>\n              <p>\n                Number of goods:\n                {' '}\n                {goods.length}\n              </p>\n              <button\n                type=\"button\"\n                onClick={this.reverseGoods}\n              >\n                Reverse goods\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.resetGoods}\n              >\n                Reset goods\n              </button>\n\n              <ul>\n                {goods.map(good => (\n                  <li key={good}>{good}</li>\n                ))}\n              </ul>\n            </>\n          )\n          : '' }\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}